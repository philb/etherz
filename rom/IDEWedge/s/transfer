	AREA    |C$$code|,CODE,READONLY

;
; Reads up to a sector of data from IDE to RAM.
;
; Entry:
;    R0 = length to transfer > 0
;    R1 -> buffer
;    LR = return address
;    MODE: SVC
;    IRQ state: undefined
;
; Exit:
;    R0 undefined
;    R1 updated
;    All other registers and flags preserved
;    IRQ state preserved but IRQs are enabled during call.

DATA_LO * 0x2400
DATA_HI * 0x2800

	MACRO
	ReadWord
	ldrb r3, [r10, #DATA_LO - DATA_LO]
	strb r3, [r1], #1
	ldrb r3, [r10, #DATA_HI - DATA_LO]
	strb r3, [r1], #1
	MEND

	MACRO
	Read2Words
	ldrb r3, [r10, #DATA_LO - DATA_LO]
	ldrb r4, [r10, #DATA_HI - DATA_LO]
	orr r3, r3, r4, lsl #8
	ldrb r4, [r10, #DATA_LO - DATA_LO]
	orr r3, r3, r4, lsl #16
	ldrb r4, [r10, #DATA_HI - DATA_LO]
	orr r3, r3, r4, lsl #24
	str r3, [r1], #4
	MEND

	MACRO
	WriteWord
	ldrb r4, [r1, #1]
	strb r4, [r10, #DATA_HI - DATA_LO]
	ldrb r3, [r1], #2
	strb r3, [r10, #DATA_LO - DATA_LO]
	MEND

	MACRO
	Write2Words
	ldr r3, [r1], #4
	mov r4, r3, lsr #8
	strb r4, [r10, #DATA_HI - DATA_LO]
	strb r3, [r10, #DATA_LO - DATA_LO]
	mov r4, r3, lsr #24
	strb r4, [r10, #DATA_HI - DATA_LO]
	mov r4, r3, lsr #16
	strb r4, [r10, #DATA_LO - DATA_LO]	
	MEND

	EXPORT IDEReadSector
IDEReadSector
	stmfd sp!, {r2-r10, r14}
	[ 0=1
	ldr r10, [r11]
	|
	ldr r10, =0x3344000
	]
	add r10, r10, #DATA_LO
	[ 1=1
	ands r2, r0, #0xf
	beq read_loop
	bic r2, r2, #1
	eor r2, r2, #14
	add pc, pc, r2, lsl #3
	nop
	nop

	ReadWord
	ReadWord
	ReadWord
	ReadWord

	ReadWord
	ReadWord
	ReadWord
	ReadWord

	ReadWord
	ReadWord
	ReadWord
	ReadWord

	ReadWord
	ReadWord
	ReadWord
	bics r0, r0, #0xf
	ldmeqfd sp!, {r2-r10, pc}^

read_loop
	Read2Words
	Read2Words
	Read2Words
	Read2Words
	
	subs r0, r0, #16
	bne read_loop
	ldmfd sp!, {r2-r10, pc}^
	|
read_loop
	cmp r0, #2
	ldmltfd sp!, {r2-r10, pc}^
	ReadWord
	sub r0, r0, #2
	b read_loop
	]
	
;
; Writes up to a sector of data from RAM to IDE.
;
; Entry:
;    R0 = length to transfer > 0
;    R1 -> buffer
;    LR = return address
;    MODE: SVC
;    IRQ state: undefined
;
; Exit:
;    R0 undefined
;    R1 updated
;    All other registers and flags preserved
;    IRQ state preserved but IRQs are enabled during call.
	EXPORT IDEWriteSector
IDEWriteSector
	stmfd sp!, {r2-r10, r14}
	[ 0=1
	ldr r10, [r11]
	|
	ldr r10, =0x3344000
	]
	add r10, r10, #DATA_LO
	[ 0=1
	ands r2, r0, #0xf
	beq aligned_write
	bic r2, r2, #1
	eor r2, r2, #14
	add pc, pc, r2, lsl #3
	nop
	nop

	WriteWord
	WriteWord
	WriteWord
	WriteWord

	WriteWord
	WriteWord
	WriteWord
	WriteWord

	WriteWord
	WriteWord
	WriteWord
	WriteWord

	WriteWord
	WriteWord
	WriteWord
aligned_write
	bics r0, r0, #0xf
	ldmeqfd sp!, {r2-r10, pc}^

write_loop
	Write2Words
	Write2Words
	Write2Words
	Write2Words
	
	subs r0, r0, #16
	bne write_loop
	ldmfd sp!, {r2-r10, pc}^
	|
	cmp r0, #512
	movlt r0, #512
write_loop
	cmp r0, #2
	ldmltfd sp!, {r2-r10, pc}^
	WriteWord
	sub r0, r0, #2
	b write_loop
	]

	END
